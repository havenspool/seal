<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
       connections-per-host: 每个主机答应的连接数（每个主机的连接池大小），当连接池被用光时，会被阻塞住
       max-wait-time: 被阻塞线程从连接池获取连接的最长等待时间（ms）
       connect-timeout:在建立（打开）套接字连接时的超时时间（ms）
       socket-timeout:套接字超时时间;该值会被传递给Socket.setSoTimeout(int)
       slave-ok:指明是否答应驱动从次要节点或者奴隶节点读取数据
       -->
    <!--<mongo:mongo host="localhost" port="27017" />-->
    <mongo:mongo host="localhost" port="27017">
        <!--<mongo:options-->
                <!--connections-per-host="10"-->
                <!--threads-allowed-to-block-for-connection-multiplier="4"-->
                <!--connect-timeout="1000"-->
                <!--max-wait-time="1500"-->
                <!--auto-connect-retry="true"-->
                <!--socket-keep-alive="true"-->
                <!--socket-timeout="1500"-->
                <!--slave-ok="true"-->
                <!--write-number="1"-->
                <!--write-timeout="0"-->
                <!--write-fsync="true"/>-->
    </mongo:mongo>
    <mongo:db-factory id="mongoDbFactory" dbname="seal" username="root" password=""/>
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
    </bean>

    <bean name="userDaoImpl" class="com.havens.seal.dao.UserDaoImpl">
        <constructor-arg ref="mongoTemplate"/>
    </bean>
</beans>